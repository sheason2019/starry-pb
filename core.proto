syntax = "proto3";
package starry;

option go_package = "./;prototypes";

// Core 四大能力
// 1. PubMeta 维护
// 2. Connect
// 3. Message 下发
// 4. TODO: Federation 消息广播

message VoidMessage {}

message PubMeta {
  string pub_key_pem = 1;
  string username = 2;
  string avatar_url = 3;
  int32 created_at = 5;

  // 私钥字符串，仅在导出Metadata时使用
  string priv_key_pem = 1001;
}

// 通用身份鉴权结构体
message IdentifySignatureCompose {
  PubMeta pub_meta = 1;
  bytes pub_meta_sig = 2;
  bytes verify_token_sig = 3;
}

// 通用Connect传输内容
message ConnectMessage {
  string type = 1;
  bytes payload = 2;
}

// 包裹消息的盒子，用来帮助服务端判断消息的收发者
message MessageBox {
  string conversation_type = 1; // 可能是群聊、普通用户、订阅账号等
  string conversation_key = 2;
  string sender_key = 3;
  string receiver_key = 4;
  bytes data = 5;
  bytes data_sig = 6;
}

// 消息的实际内容
message MessageData {
  string conversation_type = 1;
  string conversation_key = 2;
  string sender_key = 3;
  string receiver_key = 4;
  string message_type = 5; // text image video
  string content = 6;
  string created_at = 7;
}

message Information {
  string name = 1;
}

service StarrySource {
  rpc GetInformation(VoidMessage) returns (Information);
  rpc Connect(stream ConnectMessage) returns (stream ConnectMessage);
}

service StarryFederation {
  rpc Join(VoidMessage) returns (VoidMessage);
}
